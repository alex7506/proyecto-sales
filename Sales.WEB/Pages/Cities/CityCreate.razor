@page "/cities/create/{StateId:int}"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h3>Crear Ciudad</h3>

<CitiesForm @ref="citiesForm" City="city" OnValidSubmit="CreateAsync" ReturnAction="Return" />

@code {
    private City city = new();
    private CitiesForm? citiesForm;

    [Parameter]
    public int StateId { get; set; }

    private async Task CreateAsync()
    {
        city.StateId = StateId;
        var responseHttp = await repository.PostAsync("/api/cities", city);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }
        else
        {
            citiesForm!.FormPostedSuccessfully = true;
            navigationManager.NavigateTo($"/states/details/{StateId}");
        }

        citiesForm!.FormPostedSuccessfully = true;
        Return();
        var toast = sweetAlertService.Mixin(new SweetAlertOptions
            {
                Toast = true,
                Position = SweetAlertPosition.TopEnd,
                ShowConfirmButton = false,
                Timer = 5000
            });
        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Ciudad creada con éxito.");
    }

    private void Return()
    {
        navigationManager.NavigateTo($"/states/details/{StateId}");
    }
}